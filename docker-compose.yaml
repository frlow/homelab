name: dt

x-common: &common
  restart: always

x-apps:
  traefik: &traefik
    <<: *common
    image: traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--api.insecure=true"
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
      - '--entrypoints.websecure.address=:443'
      - "--serverstransport.insecureskipverify=true"
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--certificatesresolvers.default.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.default.acme.tlsChallenge=true'
      - '--certificatesresolvers.default.acme.storage=/data/acme.json'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik:/data
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.traefik.entrypoints": websecure
      "traefik.http.routers.traefik.rule": "Host(`traefik.${DOMAIN}`)"
      "traefik.http.routers.traefik.tls.certresolver": "default"
      "traefik.http.services.traefik.loadbalancer.server.port": "8080"
      traefik.http.routers.traefik.middlewares: login@docker

  login: &login
    <<: *common
    image: login
    build: ./apps/login
    environment:
      DOMAIN: ${DOMAIN}
      PASSWORD: ${PASSWORD:-password}
    labels:
      traefik.enable: true
      traefik.http.routers.login.rule: PathPrefix(`/__login`)
      traefik.http.routers.login.priority: 1000
      traefik.http.routers.login.entrypoints: websecure
      traefik.http.routers.login.tls.certresolver: default
      traefik.http.middlewares.login.forwardauth.address: http://login:3000/__login/q

  landing: &landing
    <<: *common
    image: landing
    build: ./apps/landing
    labels:
      traefik.enable: true
      traefik.http.routers.landing.rule: PathPrefix(`/__login`)
      traefik.http.routers.landing.priority: 1000
      traefik.http.routers.landing.entrypoints: websecure
      traefik.http.routers.landing.tls.certresolver: default
      traefik.http.routers.landing.middlewares: login@docker

  sonarr: &sonarr
    <<: *common
    image: lscr.io/linuxserver/sonarr
    volumes:
      - sonarr:/config
      - media:/data
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-Europe/London}
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.sonarr.entrypoints": websecure
      "traefik.http.routers.sonarr.rule": "Host(`sonarr.${DOMAIN}`)"
      "traefik.http.routers.sonarr.tls.certresolver": "default"
      traefik.http.routers.sonarr.middlewares: login@docker

  radarr: &radarr
    <<: *common
    image: lscr.io/linuxserver/radarr
    volumes:
      - radarr:/config
      - media:/data
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-Europe/London}
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.radarr.entrypoints": websecure
      "traefik.http.routers.radarr.rule": "Host(`radarr.${DOMAIN}`)"
      "traefik.http.routers.radarr.tls.certresolver": "default"
      traefik.http.routers.radarr.middlewares: login@docker

  plex: &plex
    <<: *common
    image: lscr.io/linuxserver/plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - plex:/config
      - media:/data

  transmission: &transmission
    <<: *common
    image: lscr.io/linuxserver/transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-Europe/London}
      - USER=${USERNAME:-user}
      - PASS=${PASSWORD:-password}
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.transmission.entrypoints": websecure
      "traefik.http.routers.transmission.rule": "Host(`transmission.${DOMAIN}`)"
      "traefik.http.routers.transmission.tls.certresolver": "default"
      traefik.http.routers.transmission.middlewares: login@docker
    volumes:
      - transmission:/config
      - media:/data

  prowlarr: &prowlarr
      image: lscr.io/linuxserver/prowlarr
      volumes:
        - prowlarr:/config
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=${TZ:-Europe/London}
      labels:
        "traefik.enable": "true"
        "traefik.http.routers.prowlarr.entrypoints": websecure
        "traefik.http.routers.prowlarr.rule": "Host(`prowlarr.${DOMAIN}`)"
        "traefik.http.routers.prowlarr.tls.certresolver": "default"
        traefik.http.routers.prowlarr.middlewares: login@docker

  samba: &samba
    <<: *common
    image: dperson/samba
    environment:
      - USERID=1000
      - GROUPID=1000
      - TZ=${TZ:-Europe/London}
    command: -u "${USERNAME:-user};${PASSWORD:-password}" -s "files;/data;yes;no;no"
    ports:
      - 139:139
      - 445:445
    volumes:
      - media:/data

  wireguard: &wireguard
    <<: *common
    environment:
      - LANG=en
      - WG_HOST=wireguard.fredriklowenhamn.se
      - PASSWORD_HASH=${PASSOWRD_HASH}
      - PORT=51821
      - WG_PORT=51820
      - WG_DEFAULT_DNS=8.8.8.8
      # Optional:
      # - PASSWORD=foobar123 (deprecated, see readme)
      # - PASSWORD_HASH=$$2y$$10$$hBCoykrB95WSzuV4fafBzOHWKu9sbyVa34GJr8VV5R/pIelfEMYyG (needs double $$, hash of 'foobar123')
      # - PORT=51821
      # - WG_PORT=51820
      # - WG_CONFIG_PORT=92820
      # - WG_DEFAULT_ADDRESS=10.8.0.x
      # - WG_DEFAULT_DNS=1.1.1.1
      # - WG_MTU=1420
      # - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24
      # - WG_PERSISTENT_KEEPALIVE=25
      # - WG_PRE_UP=echo "Pre Up" > /etc/wireguard/pre-up.txt
      # - WG_POST_UP=echo "Post Up" > /etc/wireguard/post-up.txt
      # - WG_PRE_DOWN=echo "Pre Down" > /etc/wireguard/pre-down.txt
      # - WG_POST_DOWN=echo "Post Down" > /etc/wireguard/post-down.txt
      # - UI_TRAFFIC_STATS=true
      # - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)

    image: weejewel/wg-easy
    container_name: wg-easy
    volumes:
      - wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
    #  - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.wireguard.entrypoints": websecure
      "traefik.http.routers.wireguard.rule": "Host(`wireguard.${DOMAIN}`)"
      "traefik.http.routers.wireguard.tls.certresolver": "default"
      "traefik.http.services.wireguard.loadbalancer.server.port": "51821"
      "traefik.http.routers.wireguard.middlewares": login@docker

volumes:
  traefik:
  media:
  plex:
  sonarr:
  transmission:
  prowlarr:
  radarr:
  wireguard:

services:
  traefik: *traefik
  login: *login
    # landing: *landing
  plex: *plex
  sonarr: *sonarr
  transmission: *transmission
  prowlarr: *prowlarr
  samba: *samba
  radarr: *radarr
  wireguard: *wireguard
